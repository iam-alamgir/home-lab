name: "is-proxy"

services:
  traefik:
    image: traefik:3.2.3
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=${TZ}
      - PUID=${UID}
      - PGID=${GID}
      - CF_DNS_API_TOKEN=${TRAEFIK_DNS_API_TOKEN}
      - CLOUDFLARE_POLLING_INTERVAL=${TRAEFIK_POLLING_INTERVAL}
      - CLOUDFLARE_PROPAGATION_TIMEOUT=${TRAEFIK_PROPAGATION_TIMEOUT}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${TRAEFIK_VOL_CONF}:/etc/traefik/
      - ${TRAEFIK_VOL_LOGS}:/var/log/traefik/
    networks:
      proxy:
        ipv4_address: ${TRAEFIK_PROXY_IPV4}
      public:
        ipv4_address: ${TRAEFIK_PUBLIC_IPV4}
    ports:
      - ${HOST_HTTP_PORT_EXTERNAL}:80
      - ${HOST_HTTPS_PORT_EXTERNAL}:443
    depends_on:
      crowdsec:
        condition: service_healthy
    labels:
      # enable traefik
      - "traefik.enable=true"

      # http config
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_UI_ADDRESS}`)"

      # https config
      - "traefik.http.routers.traefik-secure.entrypoints=web-secure"
      - "traefik.http.routers.traefik-secure.rule=Host(`${TRAEFIK_UI_ADDRESS}`)"
      - "traefik.http.routers.traefik-secure.tls=true"

      # ui service config
      - "traefik.http.routers.traefik-secure.service=api@internal"

      # cert resolver config
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=${TRAEFIK_ROOT_DOMAIN}"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=${TRAEFIK_SUB_DOMAINS}"

      # network config
      - "traefik.docker.network=${NET_PROXY}"

  crowdsec:
    image: crowdsecurity/crowdsec:v1.6.4-slim
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=${TZ}
      - GID=${GID}
      - COLLECTIONS=${CROWDSEC_COLLECTIONS}
      - BOUNCER_KEY_TRAEFIK=${CROWDSEC_BOUNCER_KEY_TRAEFIK}
      - LEVEL_INFO=${CROWDSEC_ENABLE_LOG}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CROWDSEC_VOL_CONF}:/etc/crowdsec/
      - ${CROWDSEC_VOL_DATA}:/var/lib/crowdsec/data/
      - ${TRAEFIK_VOL_LOGS}:/var/log/traefik/:ro
    networks:
      proxy:
        ipv4_address: ${CROWDSEC_PROXY_IPV4}
    healthcheck:
      test: ["CMD", "cscli", "version"]
      interval: 10s
      timeout: 1s
      retries: 5
      start_period: 3s
    labels:
      # enable traefik
      - "traefik.enable=true"

      # http config
      - "traefik.http.routers.crowdsec.entrypoints=web"
      - "traefik.http.routers.crowdsec.rule=Host(`${CROWDSEC_METRICS_ADDRESS}`)"

      # https config
      - "traefik.http.routers.crowdsec-secure.entrypoints=web-secure"
      - "traefik.http.routers.crowdsec-secure.rule=Host(`${CROWDSEC_METRICS_ADDRESS}`)"
      - "traefik.http.routers.crowdsec-secure.tls=true"

      # metrics service config
      - "traefik.http.routers.crowdsec-secure.service=crowdsec-metric-svc"
      - "traefik.http.services.crowdsec-metric-svc.loadbalancer.server.port=6060"

      # network config
      - "traefik.docker.network=${NET_PROXY}"

networks:
  proxy:
    name: ${NET_PROXY}
    external: true
  public:
    name: ${NET_PUBLIC}
    external: true
